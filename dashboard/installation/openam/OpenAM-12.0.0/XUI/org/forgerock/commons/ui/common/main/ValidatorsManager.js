define("org/forgerock/commons/ui/common/main/ValidatorsManager",["jquery","underscore","org/forgerock/commons/ui/common/main/AbstractConfigurationAware","org/forgerock/commons/ui/common/util/ValidatorsUtils"],function($,_,AbstractConfigurationAware,validatorUtils){var obj=new AbstractConfigurationAware;return obj.bindValidators=function(el,baseEntity,callback){var event,input,policyDelegate,validateDependents=function(e){e.attr("data-validation-dependents")&&e.closest("form").find(":input").filter(function(){return $.inArray($(this).attr("name"),e.attr("data-validation-dependents").split(","))!==-1}).trigger("change")},postValidation=function(e){var t=[],n=[],r=e.length,i,s;for(s=0;s<r;s++)i=e[s],$.inArray(i.policyRequirement,t)===-1&&(t.push(i.policyRequirement),n.push($.t("common.form.validation."+i.policyRequirement,i.params)));validatorUtils.setErrors(el.find(".validationRules[data-for-validator~='"+this.input.attr("name")+"']"),this.input.attr("name"),t),e.length?this.input.attr("data-validation-status","error"):this.input.attr("data-validation-status","ok"),el.trigger("onValidate",[this.input,n.length?n.join("<br>"):!1]),validateDependents(this.input)};_.each(el.find("[data-validator]"),function(e){e=el.find(e),e.attr("data-validation-status","error"),e.attr("data-validator-event")?event=e.attr("data-validator-event")+" change blur paste":event="change blur paste",_.each(e.attr("data-validator").split(" "),function(t){e.on(event,function(n){obj.validate.call({input:e,el:el,validatorType:t},n),validateDependents(e)})})}),baseEntity&&obj.configuration.policyDelegate&&(policyDelegate=require(obj.configuration.policyDelegate),policyDelegate.readEntity(baseEntity,_.bind(function(policy){_.each(policy.properties,_.bind(function(property,i){var input,event,idx;property.name.match(/\[\*\]$/)?input=el.find("[name^='"+property.name.replace(/\*\]$/,"")+"']"):input=el.find("[name='"+property.name+"']"),input.attr("data-validation-status","error"),input.attr("data-validator-event")?event=input.attr("data-validator-event")+" keyup change blur paste":event="keyup change blur paste",_.each(property.policyRequirements,function(e){switch(e){case"REAUTH_REQUIRED":el.trigger("check_reauth",property.name);break;case"REQUIRED":input.prop("required",!0)}}),_.each(el.find(".validationRules[data-for-validator~='"+property.name+"']"),function(e){e=el.find(e);if(!e.attr("validation-loaded")){var t={};_.each(property.policies,function(e){e.params&&_.each(e.policyRequirements,function(n){t[n]?$.extend(t[n],e.params):t[n]=e.params})}),_.each(property.policyRequirements,function(n){var r=$('<div class="field-rule"><span class="error">x</span><span/></div>');$.t("common.form.validation."+n,t[n]).length&&(r.find("span:last").attr("data-for-req",n).attr("data-for-validator",input.attr("name")).text($.t("common.form.validation."+n,t[n])),e.append(r))}),e.attr("validation-loaded","true")}}),_.each(input,function(item,idx){el.find(input[idx]).on(event,_.bind(function(e){var validationContext=e.type==="change"||e.type==="blur"?"server":"client";$.doTimeout(this.input.attr("name")+"validation"+validationContext,100,_.bind(function(){var j,params,policyFailures=[],hasServerPolicies=!1,EVAL_IS_EVIL=eval;if(!this.input.closest("form")[0])return;this.input.siblings(".validation-message").empty(),_.each(this.property.policies,_.bind(function(e,t){if(e.policyFunction)e.params||(e.params={}),params=e.params,policyFailures=policyFailures.concat(EVAL_IS_EVIL("policyFunction = "+e.policyFunction).call({failedPolicyRequirements:policyFailures},form2js(this.input.closest("form")[0]),this.input.val(),params,this.property.name));else if($.inArray("REAUTH_REQUIRED",e.policyRequirements)===-1||e.policyRequirements.length!==1)hasServerPolicies=!0},this)),validationContext==="server"&&(hasServerPolicies||this.input.attr("data-validation-force-server"))?(policyFailures=[],policyDelegate.validateProperty(baseEntity,{fullObject:form2js(this.input.closest("form")[0],".",!1),value:this.input.val(),property:this.property.name},_.bind(function(e){var t;if(!e.result)for(t=0;t<e.failedPolicyRequirements.length;t++)policyFailures=policyFailures.concat(e.failedPolicyRequirements[t].policyRequirements);postValidation.call(this,policyFailures)},this))):postValidation.call(this,policyFailures)},this))},{property:property,input:el.find(input[idx])}))},this)},this)),callback&&callback()},this)))},obj.validateAllFields=function(e){e.find(":input").trigger("blur")},obj.formValidated=function(e){return e.find("[data-validation-status=error]").length===0&&e.find("[data-validation-status=ok]").length!==0},obj.formNotInvalid=function(e){return e.find("[data-validation-status=error]").length===0},obj.validate=function(e){var t=[this.el,this.input,_.bind(obj.afterValidation,this)],n,r;_.each(this.validatorType.split(" "),_.bind(function(e){n=obj.configuration.validators[e];if(n){this.el.trigger("onValidate",[this.input,"inProgress"]);for(r=0;r<n.dependencies.length;r++)t.push(require(n.dependencies[r]));n.validator.apply(this,t)}else console.error("Could not find such validator: "+n)},this))},obj.afterValidation=function(e){e==="inProgress"?this.input.attr("data-validation-status","error"):e==="disabled"?this.input.attr("data-validation-status","disabled"):e?this.input.attr("data-validation-status","error"):this.input.attr("data-validation-status","ok"),this.el.trigger("onValidate",[this.input,e,this.validatorType])},obj})