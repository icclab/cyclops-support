<?xml version="1.0" encoding="UTF-8"?>
<project name="sample" default="all">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
   <property name="skip.tests" value="true"/>
    -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="700m"/>
    <patternset id="ignored.files">
        <exclude name="**/CVS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/rcs/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.pyc/**"/>
        <exclude name="**/.pyo/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/*.lib/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/vssver.scc/**"/>
        <exclude name="**/vssver2.scc/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.ane"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>

    <!-- JDK definitions -->

    <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
    <path id="jdk.classpath.1.7">
        <fileset dir="${jdk.home.1.7}">
            <include name="jre/lib/charsets.jar"/>
            <include name="jre/lib/deploy.jar"/>
            <include name="jre/lib/javaws.jar"/>
            <include name="jre/lib/jce.jar"/>
            <include name="jre/lib/jfr.jar"/>
            <include name="jre/lib/jfxrt.jar"/>
            <include name="jre/lib/jsse.jar"/>
            <include name="jre/lib/management-agent.jar"/>
            <include name="jre/lib/plugin.jar"/>
            <include name="jre/lib/resources.jar"/>
            <include name="jre/lib/rt.jar"/>
            <include name="jre/lib/ext/access-bridge-32.jar"/>
            <include name="jre/lib/ext/dnsns.jar"/>
            <include name="jre/lib/ext/jaccess.jar"/>
            <include name="jre/lib/ext/localedata.jar"/>
            <include name="jre/lib/ext/sunec.jar"/>
            <include name="jre/lib/ext/sunjce_provider.jar"/>
            <include name="jre/lib/ext/sunmscapi.jar"/>
            <include name="jre/lib/ext/sunpkcs11.jar"/>
            <include name="jre/lib/ext/zipfs.jar"/>
        </fileset>
    </path>

    <property name="project.jdk.home" value="${jdk.home.1.7}"/>
    <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
    <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>


    <!-- Project Libraries -->

    <path id="library.lib.classpath">
        <fileset dir="${basedir}/web/WEB-INF/lib">
            <patternset refid="library.patterns"/>
        </fileset>
    </path>


    <!-- Global Libraries -->


    <!-- Application Server Libraries -->

    <!-- Modules -->


    <!-- Module dashboard -->

    <dirname property="module.dashboard.basedir" file="${ant.file}"/>


    <property name="module.jdk.home.dashboard" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.dashboard" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.dashboard" value="${project.jdk.classpath}"/>

    <property name="compiler.args.dashboard" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>

    <property name="dashboard.output.dir" value="${module.dashboard.basedir}/out/production/dashboard"/>
    <property name="dashboard.testoutput.dir" value="${module.dashboard.basedir}/out/test/dashboard"/>

    <path id="dashboard.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="dashboard.module.production.classpath">
        <path refid="${module.jdk.classpath.dashboard}"/>
        <path refid="library.lib.classpath"/>
    </path>

    <path id="dashboard.runtime.production.module.classpath">
        <pathelement location="${dashboard.output.dir}"/>
        <path refid="library.lib.classpath"/>
    </path>

    <path id="dashboard.module.classpath">
        <path refid="${module.jdk.classpath.dashboard}"/>
        <pathelement location="${dashboard.output.dir}"/>
        <path refid="library.lib.classpath"/>
    </path>

    <path id="dashboard.runtime.module.classpath">
        <pathelement location="${dashboard.testoutput.dir}"/>
        <pathelement location="${dashboard.output.dir}"/>
        <path refid="library.lib.classpath"/>
    </path>


    <patternset id="excluded.from.module.dashboard">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.dashboard">
        <patternset refid="excluded.from.module.dashboard"/>
    </patternset>

    <path id="dashboard.module.sourcepath">
        <dirset dir="${module.dashboard.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.dashboard" depends="compile.module.dashboard.production,compile.module.dashboard.tests" description="Compile module dashboard"/>

    <target name="compile.module.dashboard.production" description="Compile module dashboard; production classes">
        <mkdir dir="${dashboard.output.dir}"/>
        <javac destdir="${dashboard.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.dashboard}/javac">
            <compilerarg line="${compiler.args.dashboard}"/>
            <bootclasspath refid="dashboard.module.bootclasspath"/>
            <classpath refid="dashboard.module.production.classpath"/>
            <src refid="dashboard.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.dashboard"/>
        </javac>

        <copy todir="${dashboard.output.dir}">
            <fileset dir="${module.dashboard.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.dashboard.tests" depends="compile.module.dashboard.production" description="compile module dashboard; test classes" unless="skip.tests"/>

    <target name="clean.module.dashboard" description="cleanup module">
        <delete dir="${dashboard.output.dir}"/>
        <delete dir="${dashboard.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.dashboard" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.dashboard" description="build all modules"/>

    <target name="init.artifacts">
        <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
        <property name="artifact.output.dashboard" value="${basedir}/out"/>
        <mkdir dir="${artifacts.temp.dir}"/>
        <property name="temp.jar.path.dashboard.war" value="${artifacts.temp.dir}/dashboard.war"/>
    </target>

    <target name="artifact.dashboard" depends="init.artifacts, compile.module.dashboard" description="Build &#39;dashboard&#39; artifact">
        <property name="artifact.temp.output.dashboard" value="${artifacts.temp.dir}/dashboard"/>
        <mkdir dir="${artifact.temp.output.dashboard}"/>
        <zip destfile="${temp.jar.path.dashboard.war}">
            <zipfileset dir="${basedir}/web"/>
            <zipfileset file="${basedir}/web/WEB-INF/web.xml" prefix="WEB-INF"/>
            <zipfileset dir="${dashboard.output.dir}" prefix="WEB-INF/classes"/>
            <zipfileset file="${basedir}/web/WEB-INF/lib/servlet-api.jar" prefix="WEB-INF/lib"/>
            <zipfileset file="${basedir}/web/WEB-INF/lib/org.restlet.jar" prefix="WEB-INF/lib"/>
            <zipfileset file="${basedir}/web/WEB-INF/lib/org.json.jar" prefix="WEB-INF/lib"/>
            <zipfileset file="${basedir}/web/WEB-INF/lib/org.restlet.ext.httpclient.jar" prefix="WEB-INF/lib"/>
            <zipfileset file="${basedir}/web/WEB-INF/lib/org.restlet.ext.httpclient.jar" prefix="WEB-INF/lib"/>
            <zipfileset file="${basedir}/web/WEB-INF/lib/org.restlet.ext.jsslutils.jar" prefix="WEB-INF/lib"/>
            <zipfileset file="${basedir}/web/WEB-INF/lib/org.restlet.ext.servlet.jar" prefix="WEB-INF/lib"/>
        </zip>
        <copy file="${temp.jar.path.dashboard.war}" tofile="${artifact.temp.output.dashboard}/dashboard.war"/>
    </target>

    <target name="build.all.artifacts" depends="artifact.dashboard" description="Build all artifacts">
        <mkdir dir="${artifact.output.dashboard}"/>
        <copy todir="${artifact.output.dashboard}">
            <fileset dir="${artifact.temp.output.dashboard}"/>
        </copy>

        <!-- Delete temporary files -->
        <delete dir="${artifacts.temp.dir}"/>
    </target>

    <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>